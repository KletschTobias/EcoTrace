Index: ../EcoTrace-E.T/src/main/java/at/htl/entities/consumption/DailyConsumption.java
===================================================================
diff --git a/../EcoTrace-E.T/src/main/java/at/htl/entities/consumption/DailyConsumption.java b/../EcoTrace-E.T/src/main/java/at/htl/entities/consumption/DailyConsumption.java
new file mode 100644
--- /dev/null	(date 1759327700752)
+++ b/../EcoTrace-E.T/src/main/java/at/htl/entities/consumption/DailyConsumption.java	(date 1759327700752)
@@ -0,0 +1,42 @@
+package at.htl.entities.consumption;
+
+import jakarta.persistence.Entity;
+
+@Entity
+public class DailyConsumption extends Consumption {
+
+    @Override
+    public void carConsumption(double km, int days) {
+        setCo2Consumption(carCO2Coefficient * km * days);
+        setWaterConsumption(carWaterCoefficient * km * days);
+        setElectricityConsumption(carElectricityCoefficient * km * days);
+    }
+
+    @Override
+    public void electricCarConsumption(double km, int days) {
+        setCo2Consumption(electricCarCO2Coefficient * km * days);
+        setWaterConsumption(electricCarWaterCoefficient * km * days);
+        setElectricityConsumption(electricCarElectricityCoefficient * km * days);
+    }
+
+    @Override
+    public void showerConsumption(double minutes, int days) {
+        setCo2Consumption(showerCO2Coefficient * minutes * days);
+        setWaterConsumption(showerWaterCoefficient * minutes *days);
+        setElectricityConsumption(showerElectricityCoefficient * minutes *days);
+    }
+
+    @Override
+    public void gamingConsumption(double hours, int days) {
+        setCo2Consumption(gamingCO2Coefficient * hours * days);
+        setWaterConsumption(gamingWaterCoefficient * hours * days);
+        setElectricityConsumption(gamingElectricityCoefficient * hours * days);
+    }
+
+    @Override
+    public void streamingConsumption(double hours, int days) {
+        setCo2Consumption(streamingCO2Coefficient * hours * days);
+        setWaterConsumption(streamingWaterCoefficient * hours * days);
+        setElectricityConsumption(streamingElectricityCoefficient * hours * days);
+    }
+}
Index: ../EcoTrace-E.T/src/main/java/at/htl/Repositories/ConsumptionRepository/DailyConsumptionRepository.java
===================================================================
diff --git a/../EcoTrace-E.T/src/main/java/at/htl/Repositories/ConsumptionRepository/DailyConsumptionRepository.java b/../EcoTrace-E.T/src/main/java/at/htl/Repositories/ConsumptionRepository/DailyConsumptionRepository.java
new file mode 100644
--- /dev/null	(date 1759325537314)
+++ b/../EcoTrace-E.T/src/main/java/at/htl/Repositories/ConsumptionRepository/DailyConsumptionRepository.java	(date 1759325537314)
@@ -0,0 +1,8 @@
+package at.htl.Repositories.ConsumptionRepository;
+
+import io.quarkus.hibernate.orm.panache.PanacheRepository;
+import jakarta.enterprise.context.ApplicationScoped;
+
+@ApplicationScoped
+public class DailyConsumptionRepository implements PanacheRepository<DailyConsumptionRepository> {
+}
Index: ../EcoTrace-E.T/src/main/java/at/htl/MyEntity.java
===================================================================
diff --git a/../EcoTrace-E.T/src/main/java/at/htl/MyEntity.java b/../EcoTrace-E.T/src/main/java/at/htl/MyEntity.java
deleted file mode 100644
--- a/../EcoTrace-E.T/src/main/java/at/htl/MyEntity.java	(revision 690d5082f9c9d5f5808deb83d2454afece61dc92)
+++ /dev/null	(revision 690d5082f9c9d5f5808deb83d2454afece61dc92)
@@ -1,29 +0,0 @@
-package at.htl;
-
-import io.quarkus.hibernate.orm.panache.PanacheEntity;
-import jakarta.persistence.Entity;
-
-
-/**
- * Example JPA entity defined as a Panache Entity.
- * An ID field of Long type is provided, if you want to define your own ID field extends <code>PanacheEntityBase</code> instead.
- * <p>
- * This uses the active record pattern, you can also use the repository pattern instead:
- * .
- * <p>
- * Usage (more example on the documentation)
- * <p>
- * {@code
- * public void doSomething() {
- * MyEntity entity1 = new MyEntity();
- * entity1.field = "field-1";
- * entity1.persist();
- * <p>
- * List<MyEntity> entities = MyEntity.listAll();
- * }
- * }
- */
-@Entity
-public class MyEntity extends PanacheEntity {
-    public String field;
-}
Index: ../EcoTrace-E.T/src/main/java/at/htl/ExampleResource.java
===================================================================
diff --git a/../EcoTrace-E.T/src/main/java/at/htl/ExampleResource.java b/../EcoTrace-E.T/src/main/java/at/htl/ExampleResource.java
deleted file mode 100644
--- a/../EcoTrace-E.T/src/main/java/at/htl/ExampleResource.java	(revision 690d5082f9c9d5f5808deb83d2454afece61dc92)
+++ /dev/null	(revision 690d5082f9c9d5f5808deb83d2454afece61dc92)
@@ -1,16 +0,0 @@
-package at.htl;
-
-import jakarta.ws.rs.GET;
-import jakarta.ws.rs.Path;
-import jakarta.ws.rs.Produces;
-import jakarta.ws.rs.core.MediaType;
-
-@Path("/hello")
-public class ExampleResource {
-
-    @GET
-    @Produces(MediaType.TEXT_PLAIN)
-    public String hello() {
-        return "Hello RESTEasy";
-    }
-}
Index: ../EcoTrace-E.T/src/main/java/at/htl/Repositories/ConsumptionRepository/WeeklyConsumptionRepository.java
===================================================================
diff --git a/../EcoTrace-E.T/src/main/java/at/htl/Repositories/ConsumptionRepository/WeeklyConsumptionRepository.java b/../EcoTrace-E.T/src/main/java/at/htl/Repositories/ConsumptionRepository/WeeklyConsumptionRepository.java
new file mode 100644
--- /dev/null	(date 1759325537306)
+++ b/../EcoTrace-E.T/src/main/java/at/htl/Repositories/ConsumptionRepository/WeeklyConsumptionRepository.java	(date 1759325537306)
@@ -0,0 +1,8 @@
+package at.htl.Repositories.ConsumptionRepository;
+
+import io.quarkus.hibernate.orm.panache.PanacheRepository;
+import jakarta.enterprise.context.ApplicationScoped;
+
+@ApplicationScoped
+public class WeeklyConsumptionRepository implements PanacheRepository<WeeklyConsumptionRepository> {
+}
Index: ../EcoTrace-E.T/src/main/java/at/htl/entities/consumption/WeeklyConsumption.java
===================================================================
diff --git a/../EcoTrace-E.T/src/main/java/at/htl/entities/consumption/WeeklyConsumption.java b/../EcoTrace-E.T/src/main/java/at/htl/entities/consumption/WeeklyConsumption.java
new file mode 100644
--- /dev/null	(date 1759327700705)
+++ b/../EcoTrace-E.T/src/main/java/at/htl/entities/consumption/WeeklyConsumption.java	(date 1759327700705)
@@ -0,0 +1,42 @@
+package at.htl.entities.consumption;
+
+import jakarta.persistence.Entity;
+
+@Entity
+public class WeeklyConsumption extends Consumption {
+
+    @Override
+    public void carConsumption(double km, int days) {
+        setCo2Consumption(carCO2Coefficient * km * days);
+        setWaterConsumption(carWaterCoefficient * km * days);
+        setElectricityConsumption(carElectricityCoefficient * km * days);
+    }
+
+    @Override
+    public void electricCarConsumption(double km, int days) {
+        setCo2Consumption(electricCarCO2Coefficient * km * days);
+        setWaterConsumption(electricCarWaterCoefficient * km * days);
+        setElectricityConsumption(electricCarElectricityCoefficient * km * days);
+    }
+
+    @Override
+    public void showerConsumption(double minutes, int days) {
+        setCo2Consumption(showerCO2Coefficient * minutes * days);
+        setWaterConsumption(showerWaterCoefficient * minutes *days);
+        setElectricityConsumption(showerElectricityCoefficient * minutes *days);
+    }
+
+    @Override
+    public void gamingConsumption(double hours, int days) {
+        setCo2Consumption(gamingCO2Coefficient * hours * days);
+        setWaterConsumption(gamingWaterCoefficient * hours * days);
+        setElectricityConsumption(gamingElectricityCoefficient * hours * days);
+    }
+
+    @Override
+    public void streamingConsumption(double hours, int days) {
+        setCo2Consumption(streamingCO2Coefficient * hours * days);
+        setWaterConsumption(streamingWaterCoefficient * hours * days);
+        setElectricityConsumption(streamingElectricityCoefficient * hours * days);
+    }
+}
Index: ../EcoTrace-E.T/src/main/java/at/htl/Repositories/ConsumptionRepository/YearlyConsumptionRepository.java
===================================================================
diff --git a/../EcoTrace-E.T/src/main/java/at/htl/Repositories/ConsumptionRepository/YearlyConsumptionRepository.java b/../EcoTrace-E.T/src/main/java/at/htl/Repositories/ConsumptionRepository/YearlyConsumptionRepository.java
new file mode 100644
--- /dev/null	(date 1759325537360)
+++ b/../EcoTrace-E.T/src/main/java/at/htl/Repositories/ConsumptionRepository/YearlyConsumptionRepository.java	(date 1759325537360)
@@ -0,0 +1,9 @@
+package at.htl.Repositories.ConsumptionRepository;
+
+import io.quarkus.hibernate.orm.panache.PanacheRepository;
+import jakarta.enterprise.context.ApplicationScoped;
+import jakarta.inject.Inject;
+
+@ApplicationScoped
+public class YearlyConsumptionRepository implements PanacheRepository<at.htl.entities.consumption.YearlyConsumption> {
+}
Index: ../EcoTrace-E.T/src/main/java/at/htl/entities/User.java
===================================================================
diff --git a/../EcoTrace-E.T/src/main/java/at/htl/entities/User.java b/../EcoTrace-E.T/src/main/java/at/htl/entities/User.java
new file mode 100644
--- /dev/null	(date 1759327700738)
+++ b/../EcoTrace-E.T/src/main/java/at/htl/entities/User.java	(date 1759327700738)
@@ -0,0 +1,32 @@
+package at.htl.entities;
+
+import at.htl.entities.consumption.*;
+import jakarta.persistence.*;
+
+import java.util.List;
+
+@Entity
+public class User {
+
+    @Id
+    @GeneratedValue
+    public Long id;
+
+    public String firstName;
+    public String lastName;
+    public String email;
+    public String userName;
+
+    @OneToMany(fetch = FetchType.LAZY)
+    public List<DailyConsumption> userDailyConsumption;
+
+    @OneToMany(fetch = FetchType.LAZY)
+    public List<WeeklyConsumption> userWeeklyConsumption;
+
+    @OneToMany(fetch = FetchType.LAZY)
+    public List<MonthlyConsumption> userMonthlyConsumption;
+
+    @OneToMany(fetch = FetchType.LAZY)
+    public List<YearlyConsumption> userYearlyConsumption;
+
+}
Index: ../EcoTrace-E.T/src/main/java/at/htl/entities/consumption/MonthlyConsumption.java
===================================================================
diff --git a/../EcoTrace-E.T/src/main/java/at/htl/entities/consumption/MonthlyConsumption.java b/../EcoTrace-E.T/src/main/java/at/htl/entities/consumption/MonthlyConsumption.java
new file mode 100644
--- /dev/null	(date 1759327700724)
+++ b/../EcoTrace-E.T/src/main/java/at/htl/entities/consumption/MonthlyConsumption.java	(date 1759327700724)
@@ -0,0 +1,42 @@
+package at.htl.entities.consumption;
+
+import jakarta.persistence.Entity;
+
+@Entity
+public class MonthlyConsumption extends Consumption {
+
+    @Override
+    public void carConsumption(double km, int days) {
+        setCo2Consumption(carCO2Coefficient * km * days);
+        setWaterConsumption(carWaterCoefficient * km * days);
+        setElectricityConsumption(carElectricityCoefficient * km * days);
+    }
+
+    @Override
+    public void electricCarConsumption(double km, int days) {
+        setCo2Consumption(electricCarCO2Coefficient * km * days);
+        setWaterConsumption(electricCarWaterCoefficient * km * days);
+        setElectricityConsumption(electricCarElectricityCoefficient * km * days);
+    }
+
+    @Override
+    public void showerConsumption(double minutes, int days) {
+        setCo2Consumption(showerCO2Coefficient * minutes * days);
+        setWaterConsumption(showerWaterCoefficient * minutes *days);
+        setElectricityConsumption(showerElectricityCoefficient * minutes *days);
+    }
+
+    @Override
+    public void gamingConsumption(double hours, int days) {
+        setCo2Consumption(gamingCO2Coefficient * hours * days);
+        setWaterConsumption(gamingWaterCoefficient * hours * days);
+        setElectricityConsumption(gamingElectricityCoefficient * hours * days);
+    }
+
+    @Override
+    public void streamingConsumption(double hours, int days) {
+        setCo2Consumption(streamingCO2Coefficient * hours * days);
+        setWaterConsumption(streamingWaterCoefficient * hours * days);
+        setElectricityConsumption(streamingElectricityCoefficient * hours * days);
+    }
+}
Index: ../EcoTrace-E.T/src/main/java/at/htl/entities/consumption/YearlyConsumption.java
===================================================================
diff --git a/../EcoTrace-E.T/src/main/java/at/htl/entities/consumption/YearlyConsumption.java b/../EcoTrace-E.T/src/main/java/at/htl/entities/consumption/YearlyConsumption.java
new file mode 100644
--- /dev/null	(date 1759327700730)
+++ b/../EcoTrace-E.T/src/main/java/at/htl/entities/consumption/YearlyConsumption.java	(date 1759327700730)
@@ -0,0 +1,42 @@
+package at.htl.entities.consumption;
+
+import jakarta.persistence.Entity;
+
+@Entity
+public class YearlyConsumption extends Consumption {
+
+    @Override
+    public void carConsumption(double km, int days) {
+        setCo2Consumption(carCO2Coefficient * km * days);
+        setWaterConsumption(carWaterCoefficient * km * days);
+        setElectricityConsumption(carElectricityCoefficient * km * days);
+    }
+
+    @Override
+    public void electricCarConsumption(double km, int days) {
+        setCo2Consumption(electricCarCO2Coefficient * km * days);
+        setWaterConsumption(electricCarWaterCoefficient * km * days);
+        setElectricityConsumption(electricCarElectricityCoefficient * km * days);
+    }
+
+    @Override
+    public void showerConsumption(double minutes, int days) {
+        setCo2Consumption(showerCO2Coefficient * minutes * days);
+        setWaterConsumption(showerWaterCoefficient * minutes *days);
+        setElectricityConsumption(showerElectricityCoefficient * minutes *days);
+    }
+
+    @Override
+    public void gamingConsumption(double hours, int days) {
+        setCo2Consumption(gamingCO2Coefficient * hours * days);
+        setWaterConsumption(gamingWaterCoefficient * hours * days);
+        setElectricityConsumption(gamingElectricityCoefficient * hours * days);
+    }
+
+    @Override
+    public void streamingConsumption(double hours, int days) {
+        setCo2Consumption(streamingCO2Coefficient * hours * days);
+        setWaterConsumption(streamingWaterCoefficient * hours * days);
+        setElectricityConsumption(streamingElectricityCoefficient * hours * days);
+    }
+}
Index: ../EcoTrace-E.T/src/main/java/at/htl/Repositories/ConsumptionRepository/MonthlyConsumptionRepository.java
===================================================================
diff --git a/../EcoTrace-E.T/src/main/java/at/htl/Repositories/ConsumptionRepository/MonthlyConsumptionRepository.java b/../EcoTrace-E.T/src/main/java/at/htl/Repositories/ConsumptionRepository/MonthlyConsumptionRepository.java
new file mode 100644
--- /dev/null	(date 1759325537345)
+++ b/../EcoTrace-E.T/src/main/java/at/htl/Repositories/ConsumptionRepository/MonthlyConsumptionRepository.java	(date 1759325537345)
@@ -0,0 +1,8 @@
+package at.htl.Repositories.ConsumptionRepository;
+
+import io.quarkus.hibernate.orm.panache.PanacheRepository;
+import jakarta.enterprise.context.ApplicationScoped;
+
+@ApplicationScoped
+public class MonthlyConsumptionRepository implements PanacheRepository<MonthlyConsumptionRepository> {
+}
Index: ../EcoTrace-E.T/src/main/java/at/htl/dtos/UserDto.java
===================================================================
diff --git a/../EcoTrace-E.T/src/main/java/at/htl/dtos/UserDto.java b/../EcoTrace-E.T/src/main/java/at/htl/dtos/UserDto.java
new file mode 100644
--- /dev/null	(date 1759328183466)
+++ b/../EcoTrace-E.T/src/main/java/at/htl/dtos/UserDto.java	(date 1759328183466)
@@ -0,0 +1,15 @@
+package at.htl.dtos;
+
+public class UserDto {
+    public String firstName;
+    public String lastName;
+    public String email;
+    public String username;
+
+    public UserDto(String firstName, String lastName, String email, String username) {
+        this.firstName = firstName;
+        this.lastName = lastName;
+        this.email = email;
+        this.username = username;
+    }
+}
Index: ../EcoTrace-E.T/src/main/java/at/htl/entities/consumption/Consumption.java
===================================================================
diff --git a/../EcoTrace-E.T/src/main/java/at/htl/entities/consumption/Consumption.java b/../EcoTrace-E.T/src/main/java/at/htl/entities/consumption/Consumption.java
new file mode 100644
--- /dev/null	(date 1759329038269)
+++ b/../EcoTrace-E.T/src/main/java/at/htl/entities/consumption/Consumption.java	(date 1759329038269)
@@ -0,0 +1,110 @@
+package at.htl.entities.consumption;
+
+import jakarta.persistence.Entity;
+import jakarta.persistence.GeneratedValue;
+import jakarta.persistence.Id;
+import jakarta.persistence.MappedSuperclass;
+
+import java.time.LocalDate;
+
+@MappedSuperclass
+public abstract class Consumption {
+
+    @Id
+    @GeneratedValue
+    private long id;
+
+    private double waterConsumption;
+    private double electricityConsumption;
+    private double co2Consumption;
+    private LocalDate date;
+    private String type;
+
+    public final double carWaterCoefficient = 0.20;
+    public final double carElectricityCoefficient = 0;
+    public final double carCO2Coefficient = 0.15;
+
+    public final double electricCarWaterCoefficient = 0.17;
+    public final double electricCarElectricityCoefficient = 0.17;
+    public final double electricCarCO2Coefficient = 0.034;
+
+    public final double showerWaterCoefficient = 9;
+    public final double showerElectricityCoefficient = 0.315;
+    public final double showerCO2Coefficient = 0.063;
+
+    public final double gamingWaterCoefficient = 0.3;
+    public final double gamingElectricityCoefficient = 0.3;
+    public final double gamingCO2Coefficient = 0.06;
+
+    public final double streamingWaterCoefficient = 0.325;
+    public final double streamingElectricityCoefficient = 0.325;
+    public final double streamingCO2Coefficient = 0.065;
+
+
+    public Consumption(long id, double waterConsumption, double electricityConsumption, double co2Consumption, LocalDate date, String type) {
+        this.id = id;
+        this.waterConsumption = waterConsumption;
+        this.electricityConsumption = electricityConsumption;
+        this.co2Consumption = co2Consumption;
+        this.date = date;
+        this.type = type;
+    }
+
+    public Consumption() {
+    }
+
+    public abstract void carConsumption(double km, int days);
+
+    public abstract void electricCarConsumption(double km, int days);
+
+    public abstract void showerConsumption(double minutes, int days);
+
+    public abstract void gamingConsumption(double hours, int days);
+
+    public abstract void streamingConsumption(double hours, int days);
+
+
+    public long getId() {
+        return id;
+    }
+
+    public double getWaterConsumption() {
+        return waterConsumption;
+    }
+
+    public void setWaterConsumption(double waterConsumption) {
+        this.waterConsumption += waterConsumption;
+    }
+
+    public double getElectricityConsumption() {
+        return electricityConsumption;
+    }
+
+    public void setElectricityConsumption(double electricityConsumption) {
+        this.electricityConsumption += electricityConsumption;
+    }
+
+    public double getCo2Consumption() {
+        return co2Consumption;
+    }
+
+    public void setCo2Consumption(double co2Consumption) {
+        this.co2Consumption += co2Consumption;
+    }
+
+    public LocalDate getDate() {
+        return date;
+    }
+
+    public void setDate(LocalDate date) {
+        this.date = date;
+    }
+
+    public String getType() {
+        return type;
+    }
+
+    public void setType(String type) {
+        this.type = type;
+    }
+}
Index: ../EcoTrace-E.T/src/main/java/at/htl/Repositories/UserRepository.java
===================================================================
diff --git a/../EcoTrace-E.T/src/main/java/at/htl/Repositories/UserRepository.java b/../EcoTrace-E.T/src/main/java/at/htl/Repositories/UserRepository.java
new file mode 100644
--- /dev/null	(date 1759328271733)
+++ b/../EcoTrace-E.T/src/main/java/at/htl/Repositories/UserRepository.java	(date 1759328271733)
@@ -0,0 +1,38 @@
+package at.htl.Repositories;
+
+import at.htl.Repositories.ConsumptionRepository.DailyConsumptionRepository;
+import at.htl.Repositories.ConsumptionRepository.MonthlyConsumptionRepository;
+import at.htl.Repositories.ConsumptionRepository.WeeklyConsumptionRepository;
+import at.htl.Repositories.ConsumptionRepository.YearlyConsumptionRepository;
+import at.htl.dtos.UserDto;
+import at.htl.entities.User;
+import io.quarkus.hibernate.orm.panache.PanacheRepository;
+import jakarta.enterprise.context.ApplicationScoped;
+import jakarta.inject.Inject;
+
+import java.time.LocalDate;
+
+@ApplicationScoped
+public class UserRepository implements PanacheRepository<User> {
+
+    @Inject
+    UserRepository userRepository;
+
+    @Inject
+    DailyConsumptionRepository dailyConsumptionRepository;
+
+    @Inject
+    WeeklyConsumptionRepository weeklyConsumptionRepository;
+
+    @Inject
+    MonthlyConsumptionRepository monthlyConsumptionRepository;
+
+    @Inject
+    YearlyConsumptionRepository yearlyConsumptionRepository;
+
+    public UserDto getUserInformation(Long id){
+        User user = userRepository.findById(id);
+        return new UserDto(user.firstName, user.lastName, user.email, user.userName);
+    }
+
+}
Index: ../EcoTrace-E.T/src/main/java/at/htl/services/UserService.java
===================================================================
diff --git a/../EcoTrace-E.T/src/main/java/at/htl/services/UserService.java b/../EcoTrace-E.T/src/main/java/at/htl/services/UserService.java
new file mode 100644
--- /dev/null	(date 1759329360432)
+++ b/../EcoTrace-E.T/src/main/java/at/htl/services/UserService.java	(date 1759329360432)
@@ -0,0 +1,100 @@
+package at.htl.services;
+
+import at.htl.Repositories.UserRepository;
+import at.htl.dtos.UserDto;
+import at.htl.entities.User;
+import io.netty.handler.codec.http.HttpStatusClass;
+import jakarta.inject.Inject;
+import jakarta.ws.rs.*;
+import jakarta.ws.rs.core.HttpHeaders;
+import jakarta.ws.rs.core.MediaType;
+import jakarta.ws.rs.core.Response;
+import jdk.jshell.Snippet;
+
+import javax.print.attribute.standard.Media;
+import java.time.LocalDate;
+
+@Path("/users")
+public class UserService {
+
+    @Inject
+    UserRepository userRepository;
+
+    @GET
+    @Produces(MediaType.TEXT_PLAIN)
+    public String hello() {
+        return "Hello RESTEasy";
+    }
+
+    @GET()
+    @Path("/{id}")
+    @Produces(MediaType.APPLICATION_JSON)
+    public UserDto getUserInformation(@PathParam("id") Long id) {
+        return userRepository.getUserInformation(id);
+    }
+
+    @GET()
+    @Path("/{id}/daily/{date}")
+    @Produces(MediaType.APPLICATION_JSON)
+    public UserDto getUserConsumptionDaily(@PathParam("id") Long id,
+                                           @PathParam("date") LocalDate date) {
+        return userRepository.getUserInformation(id);
+    }
+
+    @GET()
+    @Path("/{id}/weekly/{calenderweek}")
+    @Produces(MediaType.APPLICATION_JSON)
+    public UserDto getUserConsumptionWeekly(@PathParam("id") Long id,
+                                            @PathParam("calenderweek") int calenderweek) {
+        return userRepository.getUserInformation(id);
+    }
+
+    @GET()
+    @Path("/{id}/monthly/{month}")
+    @Produces(MediaType.APPLICATION_JSON)
+    public UserDto getUserConsumptionMonthly(@PathParam("id") Long id,
+                                             @PathParam("month") int month) {
+        return userRepository.getUserInformation(id);
+    }
+
+    @GET()
+    @Path("/{id}/yearly/{year}")
+    @Produces(MediaType.APPLICATION_JSON)
+    public UserDto getUserConsumptionYearly(@PathParam("id") Long id,
+                                            @PathParam("year") int year) {
+        return userRepository.getUserInformation(id);
+    }
+
+    @POST
+    @Path("/{id}/daily/{daily}")
+    @Produces(MediaType.APPLICATION_JSON)
+    @Consumes(MediaType.APPLICATION_JSON)
+    public Response.Status postConsumptionDaily(){
+        return Response.Status.NO_CONTENT;
+    }
+
+
+    @POST
+    @Path("/{id}/weekly/{weekly}")
+    @Produces(MediaType.APPLICATION_JSON)
+    @Consumes(MediaType.APPLICATION_JSON)
+    public Response.Status postConsumptionWeekly(){
+        return Response.Status.NO_CONTENT;
+    }
+
+    @POST
+    @Path("/{id}/monthly/{month}")
+    @Produces(MediaType.APPLICATION_JSON)
+    @Consumes(MediaType.APPLICATION_JSON)
+    public Response.Status postConsumptionMonthly(){
+        return Response.Status.NO_CONTENT;
+    }
+
+    @POST
+    @Path("/{id}/yearly/{year}")
+    @Produces(MediaType.APPLICATION_JSON)
+    @Consumes(MediaType.APPLICATION_JSON)
+    public Response.Status postConsumptionYearly(){
+        return Response.Status.NO_CONTENT;
+    }
+}
